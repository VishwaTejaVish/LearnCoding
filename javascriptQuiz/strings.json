[
  {
    "id": 1,
    "question": "What is the output of:",
    "code":"console.log(\"Hello\".length);",
    "options": [
      "4",
      "5",
      "6",
      "error"
    ],
    "answer": "5"
  },
  {
    "id": 2,
    "question": "How do you convert a string to uppercase in JavaScript?",
    "options": [
      "str.toUpperCase()",
      "str.upper()",
      "toUpper(str)",
      "string.uppercase()"
    ],
    "answer": "str.toUpperCase()"
  },
  {
    "id": 3,
    "question": "What does the following return?",
    "code":"JavaScript\".charAt(4);\"",
    "options": [
      "S",
      "a",
      "v",
      "c"
    ],
    "answer": "S"
  },
  {
    "id": 4,
    "question": "Which method is used to find the position of the first occurrence of a specified value in a string?",
    "options": [
      "indexOf()",
      "search()",
      "find()",
      "includes()"
    ],
    "answer": "indexOf()"
  },
  {
    "id": 5,
    "question": "What will this return?",
    "code":"hello world\".includes(\"WORLD\");",
    "options": [
      "true",
      "false",
      "undefined",
      "error"
    ],
    "answer": "false"
  },
  {
    "id": 6,
    "question": "What is the result of:",
    "code":"\"abc\".repeat(3);\"",
    "options": [
      "abc3",
      "aaabbbccc",
      "error",
      "abcabcabc"
    ],
    "answer": "abcabcabc"
  },
  {
    "id": 7,
    "question": "Which of the following methods returns the Unicode of the character at a specified index?",
    "options": [
      "charAt()",
      "codePointAt()",
      "charCode()",
      "charValue()"
    ],
    "answer": "codePointAt()"
  },
  {
    "id": 8,
    "question": " Which string method can be used to check if a string starts with a specific sequence?",
    "options": [
      "beginsWith()",
      "startsWith()",
      "matchStart()",
      "firstIndex()"
    ],
    "answer": "startsWith()"
  },
  {
    "id": 9,
    "question": "What will the following code output?",
    "code":"\"JavaScript\".charAt(4);",
    "options": [
      "S",
      "s",
      "c",
      "undefined"
    ],
    "answer": "S"
  },
  {
    "id": 10,
    "question": "What is the output?",
    "code":"console.log(\"hello\" + 1 + 2);",
    "options": [
      "hello3",
      "hello12",
      "helloNaN",
      "Error"
    ],
    "answer": "hello12"
  },
  {
    "id": 11,
    "question": "What is the output of:",
    "code":"\"5\" - 2;",
    "options": [
      "\"3\"",
      "3",
      "NaN",
      "52"
    ],
    "answer": "3",
    "explanation":"- triggers type coercion to number."
  },
  {
    "id": 12,
    "question": "What will this print?",
    "code":"let a = \"foo\";\r\nlet b = new String(\"foo\");\r\nconsole.log(a == b);\r\nconsole.log(a === b);",
    "options": [
      "true true",
      "false false",
      "true false",
      "false true"
    ],
    "answer": "true false",
    "explanation":"== compares value with coercion, === checks type too (b is an string object, a is a string)."
  },
  {
    "id": 13,
    "question": "What does this output?",
    "code":"let str = \"Hello World!\";\r\nconsole.log(str.slice(6, -1));",
    "options": [
      "World!",
      "World",
      "ello Worl",
      "orld"
    ],
    "answer": "World",
    "explanation":"(slice(start, end) excludes end index; -1 means \"last character but not included\")"
  },
  {
    "id": 14,
    "question": "Whatâ€™s the result of this?",
    "code":"\"hello\".toUpperCase().charAt(1);",
    "options": [
      "e",
      "E",
      "H",
      "L"
    ],
    "answer": "E",
    "explanation":"\"HELLO\" \u2192 charAt(1) is E."
  },
  {
    "id": 15,
    "question": "What will be the output?",
    "code":"console.log(typeof \"123\" === typeof String(123));",
    "options": [
      "true",
      "false"
    ],
    "answer": "true",
    "explanation":"Both return primitive strings (typeof \"123\" and typeof String(123) \u2192 \"string\")"
  },
  {
    "id": 16,
    "question": "What does this return?",
    "code":"\"banana\".split(\"\").reverse().join(\"\");",
    "options": [
      "banana",
      "ananab",
      "baanna",
      "SyntaxError"
    ],
    "answer": "ananab"
  }
]
